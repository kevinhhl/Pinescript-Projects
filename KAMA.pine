// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© DojiEmoji

//@version=5

indicator(title="Kaufman's Adaptive Moving Average (KAMA)", shorttitle="KAMA [KL]", overlay=true, timeframe="")

// @function            Implementation of Kaufman's Efficiency Ratio ("ER").
// @param src           (series float) Source data, typically the closing price.
// @param len           (int) Length of lookback period.
// @returns             (float) efficiency ratio.
er(src, len) =>
    float total_abs_chng = 0// [B]
    for i = 1 to len by 1
        total_abs_chng += math.abs(src[i - 1] - src[i])
    net_chng = src - src[len] // [A]
    
    // Return -> [A]/[B]
    net_chng / total_abs_chng


var int period = input(10, title="Lookback period", group="KAMA")

// Kaufman's Adaptive Moving Average ("KAMA")
// KAMA_t = KAMA_t-1 + sc_t * (p_t - KAMA_t-1)
// where:
//   p_t = current closing price
//   sc_t = smoothing constant, based on Kaufman's Eff. Ratio ("ER")
//
//   where: sc_t = (ER_t x (_FAST - _SLOW) + _SLOW) ^2
//          _FAST = 2 / (fast MA period + 1)
//          _SLOW = 2 / (slow MA period + 1)
//  The fast and slow periods are usually 2 and 30
//  Source: Chapter 17, "Trading System and Methods - 6th edition" by Perry J. Kaufman

var float _FAST = 0.666666666666667
var float _SLOW = 0.0645161290322581
abs_er = math.abs(er(close, period))
sc_t = math.pow(abs_er * (_FAST-_SLOW) + _SLOW, 2)

float KAMA_t = 0
KAMA_t := nz(KAMA_t[1],close[1]) + sc_t * (close-nz(KAMA_t[1],close[1]))
plot(KAMA_t, title="KAMA")

// Barcolors to represent crossings (also considering whether they are red/green candles)
var string GROUP_CROSS_COLL = "Coloring of bars"
var bool show_crossings = input.bool(false, title="Use custom candle colors", group=GROUP_CROSS_COLL)
var color col_xUp = input.color(color.blue, title="When price crosses above KAMA", group=GROUP_CROSS_COLL)
var color col_xDn = input.color(color.red, title="When price crosses below KAMA", group=GROUP_CROSS_COLL)
cross_up = ta.crossover(close, KAMA_t) and close > open
cross_dn = ta.crossunder(close, KAMA_t) and close < open
barcolor(show_crossings and cross_up ? col_xUp : na)
barcolor(show_crossings and cross_dn ? col_xDn : na)

// Background colors to visualize levels of market noise (experimental)
var string GROUP_NOISE_COL = "Visualization of market noise (Experimental)"
var bool bgcol_mode = input.bool(false, title="Fill background", tooltip="To visualize market noise.", group=GROUP_NOISE_COL)
var color color_low  = input.color(color.new(color.green, 90),title="Low level of market noise", group=GROUP_NOISE_COL)
var color color_high = input.color(color.new(color.red, 90),title="High level of market noise", group=GROUP_NOISE_COL)
bgcolor(bgcol_mode and abs_er < 0.25 ? color_low : na)
bgcolor(bgcol_mode and abs_er > 0.5 ? color_high : na)
